객체에 대한 참조값을 요소로 가지는 객체 배열을 생성하는 코드를 구현하시오
이 문제는 기본형 타입이 아닌 참조형 타입의 객체가 원소인 객체 배열을 구현할 수 있는지를 묻는 문제이다
아래와 같이 출력하는데 다양한 방식으로 출력해보시오 3가지 정도로
반복문을 사용해서 객체를 생성해보시오.

class Person{
	
속성
private String name;
private int age;

생성자
Person() {}
Person(String name, int age) {
	this.name = name;
	this.age = age;
}

메서드
public String getName();
public void setName(String name){this.name = name;}



}
public class Java100_oop_ObjArray{
	public static void main(String[] args) {
	
	객체배열생성
	int[] ar1 = {1,2,3,4,5};
	char[] ar2 = {"A","B","C","D","E"};
	
	출력
	for(int i = 0; i < ar1.length; i++){
		System.out.print(ar1[i]+" ");
	}
	System.out.println();
	}
}

Person[] pa = new Person[5];
pa[0] = new Person("홍길동",20);
pa[1] = new Person("박길동",21);
pa[2] = new Person("김길동",22);
pa[3] = new Person("장길동",23);
pa[4] = new Person("고길동",24);

5개의 객체가 생성

for(int i = 0 ; i < pa.length; i++) {
	System.out.println(pa[i] + "");
}
System.out.println();

System.out.pritln(pa[i].getName())
pa[i].getName();
pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();

pa[i].getName();


public class Java100_oop_ObjArray2{
	public static void main(String[] args) {
	//[1]객체 생성
	Person[] pa; // Person 타입의 객체 배열 변수 pa 선언
	pa = new Person[10]; // Person 객체가 10개 있음
	//[2]반복은for을돌면서Person()객체생성
	for(int i = 0; i < pa.length; i++) {
		pa[i] = new Person(i+"번 후보자", i+20+"세");
	}
   }
}

i + "번 후보자 "   // 문자열을 붙임으로써 String 타입으로 전달 211106 주정석

System.out.println(pa[i].getName());

private String a;

public String geta();
public void seta(String a){
	this.a = a;
System.out.println(pa[i].geta());

public void setName(String name){
	this.name = name;
public String getName();

public void setName(String name){
	this.name = name;
public String getName();

public void setName(string name){
	this.name = name;
public String getName();
public 받는타입 getName();

public void setName(String name){
	this.name = name;

pa[i].name;
pa[i].getName;
pa[i].name;
pa[i].getName;

System.out.printf("%s의 나이는 %d살입니다.", pa[i].getName, pa[i].getAge);
