abstract class Animal {
	abstract void cry();
}

class Dog extends Animal {
	void cry() {
		System.out.println("멍멍~");
	}
}

class Cat extends Animal {
	void cry() {
		System.out.println("야옹~");
	}
}

class Animal2 {
	void fly() {System.out.println("날다.");}
}

public class Java100_oop_AbstractClassMethod {
	public static void main(String[] args) {

	}
}

abstract class
abstract class
abstract class
구체적인 내용은 작성하지 않고 공통적인 특징을 추상적으로 선언
리턴값조차도없이 메서드명만 선언
설명조차도없다
public class 꼭 main이 아니어도 됨
	public static void main이여야함

상식적으로 생각해봐도 인스턴스를 생성할 수 없다
구체적인 내용이 없기 때문에
Animal dog = new Animal(); //이게 불가능하다는 뜻
Animal2 dragonfly - new Animal2();


그렇다면 추상클래스는 왜 쓰는가?

상속을 받아서 사용한다.
아들아 내가 이걸 만들다 말았다 니가 마무리해서 잘 써라
즉, 추상 클래스를 상속받은 자식 클래스에서 해당 메서드를 오버라이딩하여 재정의한 후 사용한다.

abstract class Animal {
	abstract void cry();
}

class Dog extends Animal {
	void cry() {
		System.out.println("멍멍~");
	}
}

class Cat extends Animal {
	void cry() {
		System.out.println("야옹~");
	}
}
